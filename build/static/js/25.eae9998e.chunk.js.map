{"version":3,"sources":["utils/index.ts","redux/actions.ts","utils/makeRequest.ts","routes/Routes.tsx"],"names":["industryTypes","iconStyles","position","top","marginRight","isAuthenticated","a","Auth","currentAuthenticatedUser","then","e","result","catch","err","generateGithubUrl","userName","getWhatsAppUrl","whatsappNumber","name","number","replace","encodeURI","setIsAuth","data","dispatch","type","payload","setLoading","value","setUserType","userType","fetchProfileDetails","makeRequest","get","user","error","saveCandidateData","values","callback","post","saveRecruiterData","createJobPost","jobDetail","jobUploaded","notification","success","message","description","fetchPostedJobs","jobRecord","fetchSkillSearch","skills","join","applyForJob","id","jobid","getJobDetails","cname","fetchTrendingJobs","fetchRecommendedJobs","fetchJobDetail","fetchRecommendedCandidates","setRecruiterCandidateDetails","setSearchType","searchType","fetchCompanySearchData","fetchAppliedCandidates","jobslug","enrolledCandidate","fetchCandidateDetails","slugId","about","tempRecommendedCandidates","Object","assign","store","getState","recommendedCandidates","map","itm","aboutid","gitInfo","fetchRecruiterSkillSearch","fetchCities","cities","fetchSkills","clearStates","baseUrl","URL","fetch","currentSession","getIdToken","getJwtToken","method","headers","response","json","JSON","stringify","body","put","delete","Signup","lazy","Login","LandingPage","NavBar","SearchResult","RecruiterSearch","CandidateProfile","RecruiterProfile","CandidateJobDetail","ApplicationManager","pages","pageLink","view","showNavbar","connect","state","isAuth","loading","bindActionCreators","props","location","invalidLocations","history","useHistory","useEffect","resp","signInUserSession","idToken","length","push","pathname","includes","fallback","page","index","exact","path","render","className","Loader","to"],"mappings":"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","file":"static/js/25.eae9998e.chunk.js","sourcesContent":["import * as CSS from 'csstype';\nimport { Auth } from 'aws-amplify';\n\nexport const industryTypes = ['Information Technology & Services', 'Hospital & Health Care', 'Construction', 'Retail', 'Education Management', 'Financial Services', 'Accounting', 'Computer Software', 'Higher Education', 'Automotive'];\n\nexport const iconStyles: CSS.Properties<string | number> = {\n    position:'relative', \n    top:'2px',\n    marginRight: '5px',\n}\n\nexport const isAuthenticated = async () => {\n    return Auth.currentAuthenticatedUser()\n        .then(e => {\n            return {\n                result: true,\n                ...e\n            };\n        })\n        .catch(err => {\n            return {\n                result: false,\n                ...err\n            }\n        })\n}\n\nexport const generateGithubUrl = (userName: string) => (`https://github.com/${userName}`)\n\nexport const whatsAppBaseUrl = 'https://wa.me';\n\nexport const getWhatsAppUrl = (whatsappNumber: string, name: string) => {\n    let number = whatsappNumber;\n    number = number?.replace(/[^\\w\\s]/gi, '').replace(/ /g, '');\n    const url = `${whatsAppBaseUrl}/${number}?text=${encodeURI(`Hello ${name}!!`)}`;\n    return url;\n}","import { notification } from 'antd';\nimport { CandidateSubmitTypes, RecruitereSubmitTypes } from '../pages/Onboarding/types';\nimport { UserTypeTypes } from '../routes';\nimport makeRequest from '../utils/makeRequest';\nimport { DispatchType } from './types';\nimport { SearchType, store } from '.';\n\nexport const setIsAuth = (data: boolean) => {\n    return (dispatch: DispatchType) => {\n        dispatch({\n            type:\"SET_AUTH\",\n            payload: data\n        })\n    }\n}\n\nexport const setLoading = (value: boolean) => {\n    return (dispatch: DispatchType) => {\n        dispatch({\n            type: 'SET_LOADING',\n            payload: value\n        })\n    }\n}\n\nexport const setUserType = (userType: UserTypeTypes) => {\n    return (dispatch: DispatchType) => {\n        dispatch({\n            type: 'SET_USER_TYPE',\n            payload: userType\n        })\n    }\n}\n\nexport const setActiveJobModalVisible = (data: boolean) => {\n    return (dispatch: DispatchType) => {\n        dispatch({\n            type:\"SET_ACTIVE_JOB_MODAL_VISIBLE\",\n            payload: data\n        })\n    }\n}\n\nexport const fetchProfileDetails = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true })\n        makeRequest.get('/api/users/user')\n            .then(data => {\n                dispatch({\n                    type: 'SET_PROFILE_DETAIL',\n                    payload: data.user\n                })\n                dispatch({ type: 'SET_LOADING', payload: false })\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false })\n            });\n    }\n}\n\nexport const saveCandidateData = (values: CandidateSubmitTypes, callback: any) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true })\n        makeRequest.post('/api/users/user', values)\n            .then(data => {\n                dispatch({ type: 'SET_PROFILE_DETAIL', payload: values })\n                callback();\n                dispatch({ type: 'SET_LOADING', payload: false })\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false })\n            });\n    }\n}\n\nexport const saveRecruiterData = (values: RecruitereSubmitTypes, callback: any) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true })\n        makeRequest.post('/api/users/user', values)\n            .then(data => {\n                dispatch({ type: 'SET_PROFILE_DETAIL', payload: values })\n                callback();\n                dispatch({ type: 'SET_LOADING', payload: false })\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false })\n            });\n    }\n}\n\nexport const createJobPost = (values: RecruitereSubmitTypes, callback: any) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.post('/api/jobs/job', values)\n            .then(data => {\n                dispatch({ type: 'ADD_JOB_POST', payload: data?.jobDetail?.jobUploaded })\n                notification.success({\n                    message: 'Job posted successfully',\n                    description: 'Please visit the recent jobs posted section to get updates!'\n                })\n                callback();\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const fetchPostedJobs = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true })\n        makeRequest.get('/api/jobs/job')\n            .then(data => {\n                dispatch({ type: 'SET_POSTED_JOBS', payload: data.jobRecord });\n                dispatch({ type: 'SET_LOADING', payload: false })\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false })\n            });\n    }\n}\n\nexport const fetchSkillSearch = (skills: string[]) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/job?skills=${skills.join(',')}`)\n            .then(data => {\n                dispatch({ type: 'SET_SKILL_SEARCH_RESULT', payload: data.jobRecord });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const applyForJob = (id: string, callback?: () => void) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.post(`/api/users/apply`, { jobid: id })\n            .then(data => {\n                if (data?.success) {\n                    dispatch({ type: 'SET_LOADING', payload: false });\n                    callback && callback();\n                    notification.success({\n                        message: 'Hurray!, applied successfully'\n                    })\n                }\n                else if (data?.message) {\n                    notification.error({\n                        message: 'Already applied!'\n                    })\n                    dispatch({ type: 'SET_LOADING', payload: false });\n                }\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const getJobDetails = (cname: string) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/job?cname=${cname}`)\n            .then(data => {\n                dispatch({ type: 'SET_SKILL_SEARCH_RESULT', payload: data.jobRecord });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const fetchTrendingJobs = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/trend`)\n            .then(data => {\n                if (data?.jobRecord) {\n                    dispatch({ type: 'SET_TRENDING_JOBS', payload: data.jobRecord });\n                }\n                else {\n                    dispatch({ type: 'SET_TRENDING_JOBS', payload: [] });\n                }\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n                dispatch({ type: 'SET_TRENDING_JOBS', payload: [] });\n            });\n    }\n}\n\nexport const fetchRecommendedJobs = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/reco`)\n            .then(data => {\n                if (data?.jobRecord) {\n                    dispatch({ type: 'SET_RECOMMENDED_JOBS', payload: data.jobRecord });\n                }\n                else {\n                    dispatch({ type: 'SET_RECOMMENDED_JOBS', payload: [] });\n                }\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n                dispatch({ type: 'SET_RECOMMENDED_JOBS', payload: [] });\n            });\n    }\n}\n\nexport const fetchJobDetail = (id: string) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/jobdetail?jobid=${id}`)\n            .then(data => {\n                dispatch({ type: 'SET_ACTIVE_JOB', payload: data.jobRecord });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n        }\n}\n\nexport const fetchRecommendedCandidates = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/users/getcans`)\n            .then(data => {\n                dispatch({ type: 'SET_RECOMMENDED_CANDIDATES', payload: data.user });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const setRecruiterCandidateDetails = (values: any) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_RECRUITER_CANDIDATE_DETAILS', payload: values });\n    }\n}\n\nexport const setSearchType = (searchType: SearchType) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_SEARCH_TYPE', payload: searchType });\n    }\n}\n\nexport const fetchCompanySearchData = (cname: string) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/jobs/job?cname=${cname}`)\n            .then(data => {\n                dispatch({ type: 'SET_COMPANY_SEARCH', payload: data.jobRecord });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const fetchAppliedCandidates = (jobslug: string) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/users/applied?jobid=${jobslug}`)\n            .then(data => {\n                if (data?.enrolledCandidate) {\n                    dispatch({ type: 'SET_APPLIED_CANDIDATES', payload: data.enrolledCandidate });\n                }\n                else {\n                    dispatch({ type: 'SET_APPLIED_CANDIDATES', payload: [] });\n                }\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n                dispatch({ type: 'SET_APPLIED_CANDIDATES', payload: [] });\n            });\n    }\n}\n\nexport const fetchCandidateDetails = (slugId: string) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/users/getcan?canid=${slugId}`)\n            .then(data => {\n                if (data?.user?.about) {\n                    const tempRecommendedCandidates = Object.assign([], store.getState().recommendedCandidates);\n                    tempRecommendedCandidates.map((itm: any) => {\n                        if (itm.aboutid === slugId) {\n                            itm['about'] = data.user.about;\n                            itm['gitInfo'] = data.user.gitInfo;\n                            dispatch({ type: 'SET_RECRUITER_CANDIDATE_DETAILS', payload: itm });\n                        }\n                        return itm;\n                    })\n                    dispatch({ type: 'SET_RECOMMENDED_CANDIDATES', payload: [...tempRecommendedCandidates] });\n                }\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n                dispatch({ type: 'SET_APPLIED_CANDIDATES', payload: [] });\n            });\n    }\n}\n\nexport const fetchRecruiterSkillSearch = (skills: string[]) => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get(`/api/users/search-can?skills=${skills.join(',')}`)\n            .then(data => {\n                dispatch({ type: 'SET_SKILL_SEARCH_RESULT', payload: data?.user });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const fetchCities = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get('/api/users/cities')\n            .then(data => {\n                dispatch({ type: 'SET_CITIES', payload: data?.cities });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const fetchSkills = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        makeRequest.get('/api/users/skills')\n            .then(data => {\n                dispatch({ type: 'SET_SKILLS', payload: data?.skills });\n                dispatch({ type: 'SET_LOADING', payload: false });\n            })\n            .catch((error) => {\n                dispatch({ type: 'SET_LOADING', payload: false });\n            });\n    }\n}\n\nexport const clearStates = () => {\n    return (dispatch: DispatchType) => {\n        dispatch({ type: 'CLEAR_STATE', payload: {} });\n    }\n}","import { Auth } from 'aws-amplify';\n\n// let baseUrl = process.env.REACT_APP_BASE_URL || 'http://localhost:3005';\nlet baseUrl = 'https://api.geekinsider.click';\n\nif (process.env.NODE_ENV === 'production') {\n    baseUrl = \"https://api.geekinsider.click\"\n}\n\nexport default {\n\n    async get(URL: string) {\n        return fetch(`${baseUrl}${URL}`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n            }\n        }).then(response => response.json())\n    },\n\n    async post(URL: string, values: any) {\n        return fetch(`${baseUrl}${URL}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n            },\n            body: JSON.stringify(values),\n        }).then(response => response.json())\n    },\n\n    async put(URL: string, values: any) {\n        return fetch(`${baseUrl}${URL}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n            },\n            body: JSON.stringify(values),\n        }).then(response => response.json())\n    },\n\n    async delete(URL: string, values: any) {\n        return fetch(`${baseUrl}${URL}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n            },\n            body: JSON.stringify(values),\n        }).then(response => response.json())\n    }\n\n}","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'; \n\nimport { fetchCities, fetchSkills, setIsAuth, setUserType, StateTypes } from '../redux';\nimport { AppTypes } from './types';\nimport { isAuthenticated } from '../utils';\nimport Loader from '../components/Loader';\n\nconst Signup = lazy(() => import('../pages/Signup'));\nconst Login = lazy(() => import('../pages/Login'));\nconst LandingPage = lazy(() => import('../pages/LandingPage'));\nconst NavBar = lazy(() => import('../components/NavBar'));\nconst SearchResult = lazy(() => import('../pages/SearchAndFilters'));\nconst RecruiterSearch = lazy(() => import('../pages/Recruiter/RecruiterSearch'));\nconst CandidateProfile = lazy(() => import('../pages/Candidate/CandidateProfile'));\nconst RecruiterProfile = lazy(() => import('../pages/Recruiter/RecruiterProfile'));\nconst CandidateJobDetail = lazy(() => import('../pages/Candidate/CandidateJobDetail'));\nconst ApplicationManager = lazy(() => import('../pages/Recruiter/ApplicationManager'));\nconst JobPostingForm = lazy(() => import('../pages/Recruiter/JobPostingForm'));\nconst CandidateOnboarding = lazy(() => import('../pages/Onboarding/CandidateOnboarding'));\nconst RecruiterOnboarding = lazy(() => import('../pages/Onboarding/RecruiterOnboarding'));\nconst ManageAppliedCandidates = lazy(() => import('../pages/Recruiter/ManageAppliedCandidates'));\nconst RecruiterCandidateDetails = lazy(() => import('../pages/Recruiter/RecruiterCandidateDetails'));\n\nconst pages = [\n    {\n        pageLink: '/home',\n        view: LandingPage,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/recruiter/postjob',\n        view: JobPostingForm,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/candidate/onboarding',\n        view: CandidateOnboarding,\n        showNavbar: false,\n    },\n    {\n        pageLink: '/recruiter/onboarding',\n        view: RecruiterOnboarding,\n        showNavbar: false,\n    },\n    {\n        pageLink: '/search',\n        view: SearchResult,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/login',\n        view: Login,\n        showNavbar: false,\n    },\n    {\n        pageLink: '/signup',\n        view: Signup,\n        showNavbar: false,\n    },\n    {\n        pageLink: '/candidate/profile',\n        view: CandidateProfile,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/recruiter/profile',\n        view: RecruiterProfile,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/recruiter/post/:slug',\n        view: ApplicationManager,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/job-detail/:slug',\n        view: CandidateJobDetail,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/recruiter/post/:slug/applied-candidates',\n        view: ManageAppliedCandidates,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/candidate/recommended/:slug',\n        view: RecruiterCandidateDetails,\n        showNavbar: true,\n    },\n    {\n        pageLink: '/recruiter/search',\n        view: RecruiterSearch,\n        showNavbar: true,\n    }\n];\n\nconst Routes: React.FC<AppTypes> = (props) => {\n\n    const { isAuth, location, setIsAuth, loading, fetchSkills, fetchCities, cities, skills } = props;\n    const invalidLocations = ['', '/', '/login', '/signup'];\n    const history = useHistory();\n    \n    useEffect(() => {\n        isAuthenticated().then(resp => {\n            if (resp?.result) {\n                setIsAuth(true);\n                try {\n                    const type = resp.signInUserSession.idToken.payload['cognito:groups'][0] === 'userRecruiter' ? 'recruiter' : 'candidate';\n                    setUserType(type);\n                    cities.length === 0 && fetchCities();\n                    skills.length === 0 && fetchSkills();\n                }\n                catch(e) {\n                    setIsAuth(false);\n                    setUserType('');\n                    history.push('/login');\n                }\n                // redirecting to home is these invalid urls will be requested\n                if (location?.pathname && invalidLocations.includes(location.pathname)) {\n                    history.push('/home')\n                }\n            }\n            else {\n                // redirecting to login when user is not authenticated\n                setIsAuth(false);\n                setUserType('');\n                history.push('/login');\n            }\n        })\n    }, [])\n\n    return (\n        <>\n            {isAuth && <Suspense fallback={<div/>}>\n                <NavBar history={history} setIsAuth={setIsAuth}/>\n            </Suspense>}\n            <Switch>\n                {pages.map((page, index) => \n                    <Route\n                        exact\n                        path={page.pageLink}\n                        render={(props: any) => \n                            <>\n                                {loading && <div className=\"loader--global\">\n                                    <Loader />\n                                </div>}\n                                <div className=\"app\">\n                                    <page.view {...{...props}} setIsAuth={setIsAuth} isAuth={isAuth}/>\n                                </div>\n                            </>\n                        }\n                        key={index}\n                    />\n                )}\n                <Redirect to=\"/home\" />\n            </Switch>\n        </>\n    )\n}\n\nconst mapStateToProps = (state: StateTypes) => ({\n    userType: state.userType,\n    isAuth: state.isAuth,\n    loading: state.loading,\n    skills: state.skills,\n    cities: state.cities\n});\n  \nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    setIsAuth, \n    setUserType,\n    fetchCities,\n    fetchSkills\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);"],"sourceRoot":""}