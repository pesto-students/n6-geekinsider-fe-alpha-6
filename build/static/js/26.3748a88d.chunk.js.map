{"version":3,"sources":["components/About/About.tsx","pages/Recruiter/ApplicationManager/ApplicationManager.tsx"],"names":["About","children","title","split","map","itm","connect","state","activeJob","appliedCandidates","loading","dispatch","bindActionCreators","fetchJobDetail","props","match","companyName","ctc","exp","jobDescription","jobLocation","jobTitle","skills","history","jobslug","useHistory","useEffect","params","slug","Object","keys","length","className","type","onClick","push","style","iconStyles","Loader"],"mappings":"4KAaeA,EATyB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACjD,OACI,qCACI,6BAAI,4BAAIA,MADZ,OAEKD,QAFL,IAEKA,OAFL,EAEKA,EAAUE,MAAM,MAAMC,KAAI,SAACC,GAAD,OAAiB,iCAAiBA,EAAI,yBAAVA,W,gNCmDpDC,eARS,SAACC,GAAD,MAAwB,CAC5CC,UAAWD,EAAMC,UACjBC,kBAAmBF,EAAME,kBACzBC,QAASH,EAAMG,YAGQ,SAACC,GAAD,OAAmBC,YAAmB,CAAEC,oBAAkBF,KAEtEL,EA7C+C,SAACQ,GAC3D,IAAQN,EAA8CM,EAA9CN,UAAWE,EAAmCI,EAAnCJ,QAASK,EAA0BD,EAA1BC,MAAOF,EAAmBC,EAAnBD,eAC3BG,EAAkFR,EAAlFQ,YAAaC,EAAqET,EAArES,IAAKC,EAAgEV,EAAhEU,IAAKC,EAA2DX,EAA3DW,eAAgBC,EAA2CZ,EAA3CY,YAAaC,EAA8Bb,EAA9Ba,SAAUC,EAAoBd,EAApBc,OAChEC,GADoFf,EAAZgB,QAC9DC,eAEhBC,qBAAU,WACNb,EAAeE,EAAMY,OAAOC,QAC7B,IAMH,OACI,mCACKC,OAAOC,KAAKtB,GAAWuB,OAAO,EAAI,sBAAKC,UAAU,sBAAf,UAC/B,0BAASA,UAAU,cAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,6BAAKX,IACL,+BAAOL,OAEX,cAAC,IAAD,CAAQiB,KAAK,UAAUC,QAZX,WACxBX,EAAQY,KAAR,0BAAgCpB,EAAMY,OAAOC,KAA7C,yBAWY,uBAEJ,yBAASI,UAAU,cAAnB,SACKV,EAAOlB,KAAI,SAACC,GAAD,OAAiB,sBAAM2B,UAAU,OAAhB,SAAkC3B,GAANA,QAE7D,0BAAS2B,UAAU,iBAAnB,UACI,gCAAK,cAAC,IAAD,CAAcI,MAAOC,MAAejB,KACzC,gCAAK,cAAC,IAAD,CAAWgB,MAAOC,MAAenB,EAAtC,WACA,sBAAKhB,MAAK,UAAKe,EAAL,mBAAV,UAAqC,cAAC,IAAD,CAAkBmB,MAAOC,MAAepB,EAA7E,aAEJ,cAACjB,EAAA,EAAD,CAAOE,MAAM,gBAAb,SAA8BiB,QACvBT,GAAW,cAAC4B,EAAA,EAAD","file":"static/js/26.3748a88d.chunk.js","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport { AboutPropTypes } from '.';\n\nconst About: React.FC<AboutPropTypes> = ({ children, title }) => {\n    return (\n        <>\n            <h3><b>{title}</b></h3>\n            {children?.split('\\n').map((itm: string) => <span key={itm}>{itm}<br/></span>)}\n        </>\n    )\n}\n\nexport default About;","import React, { useEffect } from 'react'\nimport { Card, Button } from 'antd'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\n\nimport Loader from '../../../components/Loader';\nimport { MdLocationOn, MdMonetizationOn, MdHistory } from \"react-icons/md\";\nimport { iconStyles } from '../../../utils';\nimport { ApplicationManagerTypes } from './types';\nimport { StateTypes, fetchJobDetail } from '../../../redux';\nimport About from '../../../components/About';\nimport './ApplicationManager.scss';\n\nconst ApplicationManager: React.FC<ApplicationManagerTypes> = (props) => {\n    const { activeJob, loading, match, fetchJobDetail } = props;\n    const { companyName, ctc, exp, jobDescription, jobLocation, jobTitle, skills, jobslug } = activeJob;\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchJobDetail(match.params.slug)\n    }, [])\n\n    const handleManageJobPost = () => {\n        history.push(`/recruiter/post/${match.params.slug}/applied-candidates`)\n    }\n\n    return (\n        <>\n            {Object.keys(activeJob).length>0 ? <div className=\"application-manager\">\n                <section className=\"each-widget\">\n                    <div className=\"right-section\">\n                        <h2>{jobTitle}</h2>\n                        <span>{companyName}</span>\n                    </div>\n                    <Button type=\"primary\" onClick={handleManageJobPost}>Manage</Button>\n                </section>\n                <section className=\"tag-section\">\n                    {skills.map((itm: string) => <span className=\"tags\" key={itm}>{itm}</span>)}\n                </section>\n                <section className=\"footer-section\">\n                    <div><MdLocationOn style={iconStyles} />{jobLocation}</div>\n                    <div><MdHistory style={iconStyles} />{exp} year</div>\n                    <div title={`${ctc} lacs per annum`}><MdMonetizationOn style={iconStyles} />{ctc} LPA</div>\n                </section>\n                <About title=\"About the job\">{jobDescription}</About>\n            </div> : (!loading && <Loader />)}\n        </>\n    )\n}\n\nconst mapStateToProps = (state: StateTypes) => ({\n    activeJob: state.activeJob,\n    appliedCandidates: state.appliedCandidates,\n    loading: state.loading\n});\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({ fetchJobDetail }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ApplicationManager);"],"sourceRoot":""}