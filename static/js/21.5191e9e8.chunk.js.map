{"version":3,"sources":["pages/Recruiter/RecruiterProfile/RecruiterDetails.tsx","pages/Recruiter/RecruiterProfile/RecruiterProfile.tsx"],"names":["connect","state","recentJobs","dispatch","bindActionCreators","fetchPostedJobs","fetchJobDetail","props","useState","mappableSkills","setMappableSkills","about","empSize","skills","location","name","site","preferredIndustry","history","useHistory","useEffect","length","split","className","type","onClick","push","map","itm","style","iconStyles","href","target","rel","profileDetails","loading","fetchRecProfile","Object","keys","Loader","text"],"mappings":"0aAyGeA,eAbS,SAACC,GAAD,MAAwB,CAC9CC,WAAYD,EAAMC,eAGO,SAACC,GAAD,OACzBC,YACE,CACEC,oBACAC,oBAEFH,KAGWH,EAvF+C,SAACO,GAC7D,MAA4CC,mBAAmB,IAA/D,mBAAOC,EAAP,KAAuBC,EAAvB,KAEEC,EASEJ,EATFI,MACAC,EAQEL,EARFK,QACAC,EAOEN,EAPFM,OACAC,EAMEP,EANFO,SACAC,EAKER,EALFQ,KACAC,EAIET,EAJFS,KACAC,EAGEV,EAHFU,kBACAf,EAEEK,EAFFL,WACAG,EACEE,EADFF,gBAEIa,EAAUC,cAEhBC,qBAAU,WACkB,IAAtBlB,EAAWmB,QAAchB,MAC5B,IAEHe,qBAAU,WACJP,GACFH,EACoB,kBAAXG,EAAsBA,EAAOS,MAAM,KAAOT,KAEpD,CAACA,IAMJ,OACE,qBAAKU,UAAU,4BAAf,SACE,eAAC,IAAD,WACE,0BAASA,UAAU,cAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,6BAAKR,IACL,+BAAOE,OAET,qBAAKM,UAAU,iBAAf,SAEE,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAdX,WACpBP,EAAQQ,KAAK,uBAaL,6BAKJ,yBAASH,UAAU,eAAnB,SACGd,EAAekB,KAAI,SAACC,GAAD,OAClB,sBAAML,UAAU,OAAhB,SACGK,GADyBA,QAKhC,0BAASL,UAAU,iBAAnB,UACE,gCACE,cAAC,IAAD,CAAcM,MAAOC,MACpBhB,KAEH,gCACE,cAAC,IAAD,CAAiBe,MAAOC,MACvBlB,KAEH,gCACE,cAAC,IAAD,CAAQiB,MAAOC,MACf,mBAAGC,KAAMf,EAAMgB,OAAO,SAASC,IAAI,aAAnC,2BAKJ,cAAC,IAAD,UAAOtB,Y,QClCAX,G,OAAAA,aAbS,SAACC,GAAD,MAAwB,CAC9CiC,eAAgBjC,EAAMiC,eACtBC,QAASlC,EAAMkC,YAGU,SAAChC,GAAD,OACzBC,YACE,CACEgC,qBAEFjC,KAGWH,EA1CuC,SAACO,GACrD,IAAQ2B,EAA6C3B,EAA7C2B,eAAgBE,EAA6B7B,EAA7B6B,gBAAiBD,EAAY5B,EAAZ4B,QAMzC,OAJAf,qBAAU,WACRgB,MACC,IAGD,qBAAKb,UAAU,oBAAf,SACGc,OAAOC,KAAKJ,GAAgBb,OAC3B,mCAIE,qBAAKE,UAAU,2BAAf,SACE,cAAC,EAAD,8BAA2BW,UAI9BC,GACC,qBAAKZ,UAAU,iBAAf,SACE,cAACgB,EAAA,EAAD,CAAQC,KAAK","file":"static/js/21.5191e9e8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { MdLocationOn, MdAccountCircle, MdHome } from \"react-icons/md\";\nimport { iconStyles } from \"../../../utils\";\n\nimport { RecruitereSubmitTypes } from \"../../Onboarding/types\";\nimport { fetchJobDetail, fetchPostedJobs, StateTypes } from \"../../../redux\";\nimport \"./RecruiterDetails.scss\";\n\ninterface RecruiterProfilePropTypes extends RecruitereSubmitTypes {\n  recentJobs: any;\n  fetchPostedJobs: () => void;\n  fetchJobDetail?: (e: string) => void;\n}\n\nconst RecruiterDetails: React.FC<RecruiterProfilePropTypes> = (props) => {\n  const [mappableSkills, setMappableSkills] = useState<string[]>([]);\n  const {\n    about,\n    empSize,\n    skills,\n    location,\n    name,\n    site,\n    preferredIndustry,\n    recentJobs,\n    fetchPostedJobs,\n  } = props;\n  const history = useHistory();\n\n  useEffect(() => {\n    if (recentJobs.length === 0) fetchPostedJobs();\n  }, []);\n\n  useEffect(() => {\n    if (skills)\n      setMappableSkills(\n        typeof skills === \"string\" ? skills.split(\",\") : skills\n      );\n  }, [skills]);\n\n  const handleJobPost = () => {\n    history.push(\"/recruiter/postjob\");\n  };\n\n  return (\n    <div className=\"recruiter__profile__right\">\n      <Card>\n        <section className=\"each-widget\">\n          <div className=\"right-section\">\n            <h2>{name}</h2>\n            <span>{preferredIndustry}</span>\n          </div>\n          <div className=\"action-buttons\">\n            {/* <Button type=\"primary\">Update</Button> */}\n            <Button type=\"primary\" onClick={handleJobPost}>\n              Post a job\n            </Button>\n          </div>\n        </section>\n        <section className=\"tags-section\">\n          {mappableSkills.map((itm: string) => (\n            <span className=\"tags\" key={itm}>\n              {itm}\n            </span>\n          ))}\n        </section>\n        <section className=\"footer-section\">\n          <div>\n            <MdLocationOn style={iconStyles} />\n            {location}\n          </div>\n          <div>\n            <MdAccountCircle style={iconStyles} />\n            {empSize}\n          </div>\n          <div>\n            <MdHome style={iconStyles} />\n            <a href={site} target=\"_blank\" rel=\"noreferrer\">\n              Website\n            </a>\n          </div>\n        </section>\n        <Card>{about}</Card>\n      </Card>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  recentJobs: state.recentJobs,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchPostedJobs,\n      fetchJobDetail,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterDetails);\n","import React, { useEffect } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport RecruiterDetails from \"./RecruiterDetails\";\nimport { fetchRecProfile, StateTypes } from \"../../../redux\";\nimport { ProfilePropsTypes } from \"./types\";\nimport Loader from \"../../../components/Loader\";\nimport \"./RecruiterProfile.scss\";\n\nconst RecruiterProfile: React.FC<ProfilePropsTypes> = (props) => {\n  const { profileDetails, fetchRecProfile, loading } = props;\n\n  useEffect(() => {\n    fetchRecProfile();\n  }, []);\n\n  return (\n    <div className=\"recruiter-profile\">\n      {Object.keys(profileDetails).length ? (\n        <>\n          {/* <div className=\"recruiter-profile__left\">\n                        <QuickProfileWidget title={name} subtitle={preferredIndustry}/>\n                    </div> */}\n          <div className=\"recruiter-profile__right\">\n            <RecruiterDetails {...{ ...profileDetails }} />\n          </div>\n        </>\n      ) : (\n        !loading && (\n          <div className=\"loader--global\">\n            <Loader text=\"Loading profile...\" />\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  profileDetails: state.profileDetails,\n  loading: state.loading,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      fetchRecProfile,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterProfile);\n"],"sourceRoot":""}