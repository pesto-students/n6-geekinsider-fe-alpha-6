{"version":3,"sources":["redux/actions.ts","utils/index.ts","utils/makeRequest.ts","routes/Routes.tsx"],"names":["setIsAuth","data","dispatch","type","payload","setLoading","value","setUserType","userType","fetchCanProfile","makeRequest","get","then","user","catch","fetchRecProfile","saveCandidateData","values","callback","post","saveRecruiterData","createJobPost","jobDetail","jobUploaded","notification","success","message","description","fetchPostedJobs","jobRecord","fetchSkillSearch","skills","join","unionArray","store","getState","skillSearch","applyForJob","id","jobid","error","getJobDetails","cname","fetchTrendingJobs","fetchRecommendedJobs","fetchJobDetail","fetchRecommendedCandidates","setRecruiterCandidateDetails","setSearchType","searchType","fetchCompanySearchData","fetchAppliedCandidates","jobslug","enrolledCandidate","appliedCandidates","fetchCandidateDetails","aboutId","about","tempStore","tempObect","recommendedCandidates","map","itm","aboutid","fetchRecruiterSkillSearch","fetchCities","cities","fetchSkills","clearStates","fetchAppliedCandidateDetail","userId","tempAppliedCandidates","fetchSearchJobDetail","jobSlug","companySearch","recommendedJobs","trendingJobs","industryTypes","iconStyles","position","top","marginRight","isAuthenticated","localStorage","getItem","generateGithubUrl","userName","getWhatsAppUrl","whatsappNumber","name","number","replace","encodeURI","firstArray","secondArray","uniqueKeyName","keys","each","getUser","JSON","parse","token","baseUrl","getHeader","Authorization","auth","URL","fetch","method","headers","body","stringify","response","json","put","delete","Signup","lazy","Login","LandingPage","NavBar","SearchResult","RecruiterSearch","CandidateProfile","RecruiterProfile","CandidateJobDetail","ApplicationManager","pages","pageLink","view","showNavbar","connect","state","isAuth","loading","bindActionCreators","props","location","invalidLocations","history","useHistory","useEffect","resp","role","e","push","pathname","includes","fallback","page","index","exact","path","render","className","Loader","to"],"mappings":"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","file":"static/js/26.573cce51.chunk.js","sourcesContent":["import { notification } from \"antd\";\nimport {\n  CandidateSubmitTypes,\n  RecruitereSubmitTypes,\n} from \"../pages/Onboarding/types\";\nimport { UserTypeTypes } from \"../routes\";\nimport makeRequest from \"../utils/makeRequest\";\nimport { unionArray } from \"../utils\";\nimport { DispatchType } from \"./types\";\nimport { SearchType, StateTypes, store } from \".\";\n\nexport const setIsAuth = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: data,\n    });\n  };\n};\n\nexport const setLoading = (value: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_LOADING\",\n      payload: value,\n    });\n  };\n};\n\nexport const setUserType = (userType: UserTypeTypes) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_USER_TYPE\",\n      payload: userType,\n    });\n  };\n};\n\nexport const setActiveJobModalVisible = (data: boolean) => {\n  return (dispatch: DispatchType) => {\n    dispatch({\n      type: \"SET_ACTIVE_JOB_MODAL_VISIBLE\",\n      payload: data,\n    });\n  };\n};\n\n// fetch candidate profile details\nexport const fetchCanProfile = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/user-can/user\")\n      .then((data) => {\n        dispatch({\n          type: \"SET_PROFILE_DETAIL\",\n          payload: data.user,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\n// fetch recriter profile details\nexport const fetchRecProfile = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/user-rec/user\")\n      .then((data) => {\n        dispatch({\n          type: \"SET_PROFILE_DETAIL\",\n          payload: data.user,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveCandidateData = (\n  values: CandidateSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-can/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const saveRecruiterData = (\n  values: RecruitereSubmitTypes,\n  callback: any\n) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/user-rec/user\", values)\n      .then(() => {\n        dispatch({ type: \"SET_PROFILE_DETAIL\", payload: values });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const createJobPost = (values: RecruitereSubmitTypes, callback: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(\"/api/jobs/job\", values)\n      .then((data) => {\n        dispatch({\n          type: \"ADD_JOB_POST\",\n          payload: data?.jobDetail?.jobUploaded,\n        });\n        notification.success({\n          message: \"Job posted successfully\",\n          description:\n            \"Please visit the recent jobs posted section to get updates!\",\n        });\n        callback();\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchPostedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/jobs/job\")\n      .then((data) => {\n        dispatch({ type: \"SET_POSTED_JOBS\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data.jobRecord,\n            \"jobslug\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const applyForJob = (id: string, callback?: () => void) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .post(`/api/user-can/apply`, { jobid: id })\n      .then((data) => {\n        if (data?.success) {\n          dispatch({ type: \"SET_LOADING\", payload: false });\n          callback && callback();\n          notification.success({\n            message: \"Hurray!, applied successfully\",\n          });\n        } else if (data?.message) {\n          notification.error({\n            message: \"Already applied!\",\n          });\n          dispatch({ type: \"SET_LOADING\", payload: false });\n        }\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const getJobDetails = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchTrendingJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/trend`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_TRENDING_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecommendedJobs = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/reco`)\n      .then((data) => {\n        if (data?.jobRecord) {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: data.jobRecord });\n        } else {\n          dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: [] });\n      });\n  };\n};\n\nexport const fetchJobDetail = (id: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${id}`)\n      .then((data) => {\n        dispatch({ type: \"SET_ACTIVE_JOB\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchRecommendedCandidates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcans`)\n      .then((data) => {\n        dispatch({ type: \"SET_RECOMMENDED_CANDIDATES\", payload: data.user });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const setRecruiterCandidateDetails = (values: any) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_RECRUITER_CANDIDATE_DETAILS\", payload: values });\n  };\n};\n\nexport const setSearchType = (searchType: SearchType) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_SEARCH_TYPE\", payload: searchType });\n  };\n};\n\nexport const fetchCompanySearchData = (cname: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/job?cname=${cname}`)\n      .then((data) => {\n        dispatch({ type: \"SET_COMPANY_SEARCH\", payload: data.jobRecord });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchAppliedCandidates = (jobslug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/applied?jobid=${jobslug}`)\n      .then((data) => {\n        if (data?.enrolledCandidate) {\n          dispatch({\n            type: \"SET_APPLIED_CANDIDATES\",\n            payload: unionArray(\n              store.getState().appliedCandidates,\n              data.enrolledCandidate,\n              \"userId\"\n            ),\n          });\n        } else {\n          dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchCandidateDetails = (aboutId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${aboutId}`)\n      .then((data) => {\n        if (data?.user?.about) {\n          const tempStore: StateTypes = store.getState();\n          const type = tempStore.searchType;\n          let tempObect = [];\n          switch (type) {\n            case \"recommended\":\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                  dispatch({\n                    type: \"SET_RECRUITER_CANDIDATE_DETAILS\",\n                    payload: itm,\n                  });\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n            case \"skillSearch\":\n              tempObect = tempStore.skillSearch.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n              break;\n            default:\n              tempObect = tempStore.recommendedCandidates.map((itm: any) => {\n                if (itm?.aboutid === aboutId) {\n                  itm = { ...itm, ...data.user };\n                }\n                return itm;\n              });\n              dispatch({\n                type: \"SET_RECOMMENDED_CANDIDATES\",\n                payload: tempObect,\n              });\n              break;\n          }\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n        dispatch({ type: \"SET_APPLIED_CANDIDATES\", payload: [] });\n      });\n  };\n};\n\nexport const fetchRecruiterSkillSearch = (skills: string[]) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/search-can?skills=${skills.join(\",\")}`)\n      .then((data) => {\n        dispatch({\n          type: \"SET_SKILL_SEARCH_RESULT\",\n          payload: unionArray(\n            store.getState().skillSearch,\n            data?.user,\n            \"aboutid\"\n          ),\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchCities = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/cities\")\n      .then((data) => {\n        dispatch({ type: \"SET_CITIES\", payload: data?.cities });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSkills = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(\"/api/utils/skills\")\n      .then((data) => {\n        dispatch({ type: \"SET_SKILLS\", payload: data?.skills });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const clearStates = () => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"CLEAR_STATE\", payload: {} });\n  };\n};\n\nexport const fetchAppliedCandidateDetail = (userId: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/user-rec/getcan?canid=${userId}`)\n      .then((data) => {\n        const tempAppliedCandidates = store\n          .getState()\n          .appliedCandidates.map((itm: any) => {\n            if (itm?.userId === userId) {\n              itm = { ...itm, ...data.user };\n            }\n            return itm;\n          });\n        dispatch({\n          type: \"SET_APPLIED_CANDIDATES\",\n          payload: tempAppliedCandidates,\n        });\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n\nexport const fetchSearchJobDetail = (jobSlug: string) => {\n  return (dispatch: DispatchType) => {\n    dispatch({ type: \"SET_LOADING\", payload: true });\n    makeRequest\n      .get(`/api/jobs/jobdetail?jobid=${jobSlug}`)\n      .then((data: any) => {\n        const tempStore: StateTypes = store.getState();\n        const type = tempStore.searchType;\n        let tempObect = [];\n        switch (type) {\n          case \"companySearch\":\n            tempObect = tempStore.companySearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_COMPANY_SEARCH\", payload: tempObect });\n            break;\n          case \"skillSearch\":\n            tempObect = tempStore.skillSearch.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_SKILL_SEARCH_RESULT\", payload: tempObect });\n            break;\n          case \"recommended\":\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n          case \"trending\":\n            tempObect = tempStore.trendingJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_TRENDING_JOBS\", payload: tempObect });\n            break;\n          default:\n            tempObect = tempStore.recommendedJobs.map((itm: any) => {\n              if (itm?.jobslug === jobSlug) {\n                itm = { ...itm, ...data.jobRecord };\n              }\n              return itm;\n            });\n            dispatch({ type: \"SET_RECOMMENDED_JOBS\", payload: tempObect });\n            break;\n        }\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      });\n  };\n};\n","import * as CSS from \"csstype\";\n\nexport const industryTypes = [\n  \"Information Technology & Services\",\n  \"Hospital & Health Care\",\n  \"Construction\",\n  \"Retail\",\n  \"Education Management\",\n  \"Financial Services\",\n  \"Accounting\",\n  \"Computer Software\",\n  \"Higher Education\",\n  \"Automotive\",\n];\n\nexport const iconStyles: CSS.Properties<string | number> = {\n  position: \"relative\",\n  top: \"2px\",\n  marginRight: \"5px\",\n};\n\nexport const isAuthenticated = () => {\n  return localStorage.getItem(\"access_token\") ? true : false;\n};\n\nexport const generateGithubUrl = (userName: string) =>\n  `https://github.com/${userName}`;\n\nexport const whatsAppBaseUrl = \"https://wa.me\";\n\nexport const getWhatsAppUrl = (whatsappNumber: string, name: string) => {\n  let number = whatsappNumber;\n  number = number?.replace(/[^\\w\\s]/gi, \"\").replace(/ /g, \"\");\n  const url = `${whatsAppBaseUrl}/${number}?text=${encodeURI(\n    `Hello ${name}!!`\n  )}`;\n  return url;\n};\n\nexport const unionArray = (\n  firstArray: any,\n  secondArray: any,\n  uniqueKeyName: string\n) => {\n  const keys: any = {};\n  // accumulating keys as the uniqueKeyName with value as the whole object of the firstArray\n  for (const each of firstArray) {\n    keys[each[uniqueKeyName]] = each;\n  }\n\n  // checking if the second array has the key, if yes then replacing that object present in secondArray with the value of the key in keys object, else returning the object as is.\n  // everything gets accumulated in an array, returning that array\n  return secondArray.map((itm: any) => {\n    if (keys[itm[uniqueKeyName]]) {\n      return keys[itm[uniqueKeyName]];\n    } else return itm;\n  });\n};\n\nexport const getUser = () => {\n  return {\n    user: JSON.parse(localStorage.getItem(\"user\")),\n    token: localStorage.getItem(\"access_token\"),\n  };\n};\n","let baseUrl = \"https://geekinsider.herokuapp.com\";\n\nif (process.env.NODE_ENV === \"production\") {\n  baseUrl = \"https://geekinsider.herokuapp.com\";\n}\n\nconst getHeader = () => {\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n  };\n};\n\nexport default {\n  async auth(URL: string, values: any) {\n    return fetch(`${baseUrl}/api/auth/${URL}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n  async get(URL: string) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"GET\",\n      headers: getHeader(),\n    }).then((response) => response.json());\n  },\n\n  async post(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"POST\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async put(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"PUT\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n\n  async delete(URL: string, values: any) {\n    return fetch(`${baseUrl}${URL}`, {\n      method: \"DELETE\",\n      headers: getHeader(),\n      body: JSON.stringify(values),\n    }).then((response) => response.json());\n  },\n};\n","import React, { Suspense, lazy, useEffect } from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { setIsAuth, setUserType, StateTypes } from \"../redux\";\nimport { AppTypes } from \"./types\";\nimport { isAuthenticated } from \"../utils\";\nimport Loader from \"../components/Loader\";\n\nconst Signup = lazy(() => import(\"../pages/Signup\"));\nconst Login = lazy(() => import(\"../pages/Login\"));\nconst LandingPage = lazy(() => import(\"../pages/LandingPage\"));\nconst NavBar = lazy(() => import(\"../components/NavBar\"));\nconst SearchResult = lazy(() => import(\"../pages/SearchAndFilters\"));\nconst RecruiterSearch = lazy(\n  () => import(\"../pages/Recruiter/RecruiterSearch\")\n);\nconst CandidateProfile = lazy(\n  () => import(\"../pages/Candidate/CandidateProfile\")\n);\nconst RecruiterProfile = lazy(\n  () => import(\"../pages/Recruiter/RecruiterProfile\")\n);\nconst CandidateJobDetail = lazy(\n  () => import(\"../pages/Candidate/CandidateJobDetail\")\n);\nconst ApplicationManager = lazy(\n  () => import(\"../pages/Recruiter/ApplicationManager\")\n);\nconst JobPostingForm = lazy(() => import(\"../pages/Recruiter/JobPostingForm\"));\nconst CandidateOnboarding = lazy(\n  () => import(\"../pages/Onboarding/CandidateOnboarding\")\n);\nconst RecruiterOnboarding = lazy(\n  () => import(\"../pages/Onboarding/RecruiterOnboarding\")\n);\nconst ManageAppliedCandidates = lazy(\n  () => import(\"../pages/Recruiter/ManageAppliedCandidates\")\n);\nconst RecruiterCandidateDetails = lazy(\n  () => import(\"../pages/Recruiter/RecruiterCandidateDetails\")\n);\n\nconst pages = [\n  {\n    pageLink: \"/home\",\n    view: LandingPage,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/postjob\",\n    view: JobPostingForm,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/candidate/onboarding\",\n    view: CandidateOnboarding,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/recruiter/onboarding\",\n    view: RecruiterOnboarding,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/search\",\n    view: SearchResult,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/login\",\n    view: Login,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/signup\",\n    view: Signup,\n    showNavbar: false,\n  },\n  {\n    pageLink: \"/candidate/profile\",\n    view: CandidateProfile,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/profile\",\n    view: RecruiterProfile,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/post/:slug\",\n    view: ApplicationManager,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/job-detail/:slug\",\n    view: CandidateJobDetail,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/post/:slug/applied-candidates\",\n    view: ManageAppliedCandidates,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/candidate/recommended/:slug\",\n    view: RecruiterCandidateDetails,\n    showNavbar: true,\n  },\n  {\n    pageLink: \"/recruiter/search\",\n    view: RecruiterSearch,\n    showNavbar: true,\n  },\n];\n\nconst Routes: React.FC<AppTypes> = (props) => {\n  const { isAuth, location, setIsAuth, loading } = props;\n  const invalidLocations = [\"\", \"/\", \"/login\", \"/signup\"];\n  const history = useHistory();\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      const resp = JSON.parse(localStorage.getItem(\"user\"));\n      setIsAuth(true);\n      try {\n        const type = resp.role === \"userRecruiter\" ? \"recruiter\" : \"candidate\";\n        setUserType(type);\n      } catch (e) {\n        setIsAuth(false);\n        setUserType(\"\");\n        history.push(\"/login\");\n      }\n      // redirecting to home is these invalid urls will be requested\n      if (location?.pathname && invalidLocations.includes(location.pathname)) {\n        history.push(\"/home\");\n      }\n    } else {\n      // redirecting to login when user is not authenticated\n      setIsAuth(false);\n      setUserType(\"\");\n      history.push(\"/login\");\n    }\n  }, []);\n\n  return (\n    <>\n      {isAuth && (\n        <Suspense fallback={<div />}>\n          <NavBar />\n        </Suspense>\n      )}\n      <Switch>\n        {pages.map((page, index) => (\n          <Route\n            exact\n            path={page.pageLink}\n            render={() => (\n              <>\n                {loading && (\n                  <div className=\"loader--global\">\n                    <Loader />\n                  </div>\n                )}\n                <div className=\"app\">\n                  <page.view />\n                </div>\n              </>\n            )}\n            key={index}\n          />\n        ))}\n        <Redirect to=\"/home\" />\n      </Switch>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: StateTypes) => ({\n  userType: state.userType,\n  isAuth: state.isAuth,\n  loading: state.loading,\n  skills: state.skills,\n  cities: state.cities,\n});\n\nconst mapDispatchToProps = (dispatch: any) =>\n  bindActionCreators(\n    {\n      setIsAuth,\n      setUserType,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\n"],"sourceRoot":""}