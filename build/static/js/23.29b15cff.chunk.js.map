{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Recruiter/RecruiterProfile/RecruiterDetails.tsx","pages/Recruiter/RecruiterProfile/RecruiterProfile.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","state","recentJobs","dispatch","bindActionCreators","fetchPostedJobs","fetchJobDetail","props","useState","mappableSkills","setMappableSkills","about","empSize","skills","location","name","site","preferredIndustry","whatsappNumber","history","useHistory","useEffect","split","className","type","onClick","map","itm","style","iconStyles","href","target","rel","profileDetails","loading","fetchProfileDetails","keys","Loader","text"],"mappings":"wKAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,sVIkFvFC,eATS,SAACC,GAAD,MAAwB,CAC5CC,WAAYD,EAAMC,eAGK,SAACC,GAAD,OAAmBC,YAAmB,CAC7DC,oBACAC,oBACDH,KAEYH,EArE+C,SAACO,GAC3D,MAA4CC,mBAAmB,IAA/D,mBAAOC,EAAP,KAAuBC,EAAvB,KACQC,EAAiIJ,EAAjII,MAAOC,EAA0HL,EAA1HK,QAASC,EAAiHN,EAAjHM,OAAQC,EAAyGP,EAAzGO,SAAUC,EAA+FR,EAA/FQ,KAAMC,EAAyFT,EAAzFS,KAAsBC,GAAmEV,EAAnFW,eAAmFX,EAAnEU,mBAAmBf,EAAgDK,EAAhDL,WAAYG,EAAoCE,EAApCF,gBAC/Fc,GADmIZ,EAAnBD,eACtGc,eAEhBC,qBAAU,WACoB,IAAtBnB,EAAWN,QAAcS,MAC9B,IAEHgB,qBAAU,WACFR,GAAQH,EAAoC,kBAAXG,EAAsBA,EAAOS,MAAM,KAAOT,KAChF,CAACA,IAWJ,OACI,qBAAKU,UAAU,4BAAf,SACI,eAAC,IAAD,WACI,0BAASA,UAAU,cAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,6BAAKR,IACL,+BAAOE,OAEX,qBAAKM,UAAU,iBAAf,SAEI,cAAC,IAAD,CAAQC,KAAK,UAAUC,QAnBrB,WAClBN,EAAQzB,KAAK,uBAkBG,6BAGR,yBAAS6B,UAAU,eAAnB,SACKd,EAAeiB,KAAI,SAACC,GAAD,OAAgB,sBAAMJ,UAAU,OAAhB,SAAkCI,GAANA,QAEpE,0BAASJ,UAAU,iBAAnB,UACI,gCAAK,cAAC,IAAD,CAAcK,MAAOC,MAAef,KACzC,gCAAK,cAAC,IAAD,CAAiBc,MAAOC,MAAejB,KAC5C,gCAAK,cAAC,IAAD,CAAQgB,MAAOC,MAAc,mBAAGC,KAAMd,EAAMe,OAAO,SAASC,IAAI,aAAnC,2BAEtC,cAAC,IAAD,UACKrB,Y,SCdNX,G,OAAAA,aATS,SAACC,GAAD,MAAwB,CAC5CgC,eAAgBhC,EAAMgC,eACtBC,QAASjC,EAAMiC,YAGQ,SAAC/B,GAAD,OAAmBC,YAAmB,CAC7D+B,yBACDhC,KAEYH,EAtCuC,SAACO,GAEnD,IAAQ0B,EAAiD1B,EAAjD0B,eAAgBE,EAAiC5B,EAAjC4B,oBAAqBD,EAAY3B,EAAZ2B,QAO7C,OALAb,qBAAU,WACNc,MACD,IAIC,qBAAKZ,UAAU,oBAAf,SACKvC,OAAOoD,KAAKH,GAAgBrC,OACzB,mCAII,qBAAK2B,UAAU,2BAAf,SACI,cAAC,EAAD,8BAA0BU,UAIhCC,GAAW,qBAAKX,UAAU,iBAAf,SACT,cAACc,EAAA,EAAD,CAAQC,KAAK","file":"static/js/23.29b15cff.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { MdLocationOn, MdAccountCircle, MdHome } from \"react-icons/md\";\nimport { iconStyles } from '../../../utils';\n\nimport { RecruitereSubmitTypes } from '../../Onboarding/types';\nimport { fetchJobDetail, fetchPostedJobs, StateTypes } from '../../../redux';\nimport './RecruiterDetails.scss';\n\ninterface RecruiterProfilePropTypes extends RecruitereSubmitTypes {\n    recentJobs: any,\n    fetchPostedJobs: () => void,\n    fetchJobDetail: (e: string) => void\n}\n\nconst RecruiterDetails: React.FC<RecruiterProfilePropTypes> = (props) => {\n    const [mappableSkills, setMappableSkills] = useState<string[]>([]);\n    const { about, empSize, skills, location, name, site, whatsappNumber, preferredIndustry, recentJobs, fetchPostedJobs, fetchJobDetail } = props;\n    const history = useHistory();\n\n    useEffect(() => {\n        if (recentJobs.length === 0) fetchPostedJobs();\n    }, [])\n\n    useEffect(() => {\n        if (skills) setMappableSkills(typeof skills === 'string' ? skills.split(',') : skills);\n    }, [skills])\n\n    const handleJobPost = () => {\n        history.push('/recruiter/postjob')\n    }\n\n    const handleJobCardClick = (jobSlug: string) => {\n        fetchJobDetail(jobSlug);\n        history.push('/recruiter/post')\n    }\n\n    return (\n        <div className=\"recruiter__profile__right\">\n            <Card>\n                <section className=\"each-widget\">\n                    <div className=\"right-section\">\n                        <h2>{name}</h2>\n                        <span>{preferredIndustry}</span>\n                    </div>\n                    <div className=\"action-buttons\">\n                        {/* <Button type=\"primary\">Update</Button> */}\n                        <Button type=\"primary\" onClick={handleJobPost}>Post a job</Button>\n                    </div>\n                </section>\n                <section className=\"tags-section\">\n                    {mappableSkills.map((itm:string) => <span className=\"tags\" key={itm}>{itm}</span>)}\n                </section>\n                <section className=\"footer-section\">\n                    <div><MdLocationOn style={iconStyles} />{location}</div>\n                    <div><MdAccountCircle style={iconStyles} />{empSize}</div>\n                    <div><MdHome style={iconStyles} /><a href={site} target=\"_blank\" rel=\"noreferrer\">Website</a></div>\n                </section>\n                <Card>\n                    {about}\n                </Card>\n            </Card>\n            {/* <Card className=\"recruiter-profile__footer\">\n                <h2>Jobs posted by {name}</h2>\n                <div className=\"recruiter-profile__jobs-posted\">\n                    <div className=\"job-cards\">\n                        {recentJobs.length ? recentJobs.map((itm: any) => <JobWidget {...{...itm, onClick: handleJobCardClick}}/>) : <Empty description=\"Please post a job to manage here\"/>}\n                    </div>\n                    <br/>\n                </div>\n            </Card> */}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: StateTypes) => ({\n    recentJobs: state.recentJobs\n});\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    fetchPostedJobs,\n    fetchJobDetail\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterDetails);","import React, { useEffect } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport RecruiterDetails from './RecruiterDetails';\nimport { fetchProfileDetails, StateTypes } from '../../../redux';\nimport { ProfilePropsTypes } from './types';\nimport Loader from '../../../components/Loader';\nimport './RecruiterProfile.scss';\n\nconst RecruiterProfile: React.FC<ProfilePropsTypes> = (props) => {\n\n    const { profileDetails, fetchProfileDetails, loading } = props;\n\n    useEffect(() => {\n        fetchProfileDetails();\n    }, [])\n\n\n    return (\n        <div className=\"recruiter-profile\">\n            {Object.keys(profileDetails).length ? \n                <>\n                    {/* <div className=\"recruiter-profile__left\">\n                        <QuickProfileWidget title={name} subtitle={preferredIndustry}/>\n                    </div> */}\n                    <div className=\"recruiter-profile__right\">\n                        <RecruiterDetails {...{...profileDetails}} />\n                    </div>\n                </>\n                :\n                (!loading && <div className=\"loader--global\">\n                    <Loader text=\"Loading profile...\"/>\n                </div>)\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: StateTypes) => ({\n    profileDetails: state.profileDetails,\n    loading: state.loading\n});\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n    fetchProfileDetails\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecruiterProfile);"],"sourceRoot":""}