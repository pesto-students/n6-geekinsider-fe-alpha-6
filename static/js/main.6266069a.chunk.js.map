{"version":3,"sources":["components/ErrorBoundary/ErrorBoundary.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Loader/Loader.tsx","redux/store.ts","redux/reducer.ts"],"names":["ErrorBoundary","props","state","hasError","this","status","title","subTitle","extra","type","onClick","history","push","children","React","Component","Routes","lazy","App","fallback","className","Loader","store","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","fontSize","text","indicator","LoadingOutlined","style","spin","tip","createStore","rootReducer","applyMiddleware","thunk","initialState","userType","isAuth","profileDetails","loading","recentJobs","skillSearch","trendingJobs","recommendedJobs","activeJob","jobDetailModalVisible","recommendedCandidates","recruiterCandidateDetails","searchType","companySearch","appliedCandidates","skills","cities","action","payload","messages"],"mappings":"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","file":"static/js/main.6266069a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Result, Button } from \"antd\";\nimport { StateTypes, PropsTypes } from \".\";\n\nclass ErrorBoundary extends React.Component<PropsTypes, StateTypes> {\n  constructor(props: PropsTypes) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  static getDerivedStateFromError(): StateTypes {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch() {\n    // componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Result\n          status=\"404\"\n          title=\"404\"\n          subTitle=\"Something went wrong!.\"\n          extra={\n            <Button\n              type=\"primary\"\n              onClick={() => this.props.history.push(\"/home\")}\n            >\n              Back Home\n            </Button>\n          }\n        />\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter, Route, RouteComponentProps } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport Loader from \"./components/Loader\";\nimport \"./App.scss\";\n\nconst Routes = lazy(() => import(\"./routes\"));\n\nconst App: () => JSX.Element = () => {\n  return (\n    <div>\n      <Suspense\n        fallback={\n          <div className=\"loader--global\">\n            <Loader />\n          </div>\n        }\n      >\n        <Provider store={store}>\n          <BrowserRouter>\n            <Route\n              path=\"/\"\n              render={(props: RouteComponentProps) => (\n                <ErrorBoundary {...props}>\n                  <Routes {...props} />\n                </ErrorBoundary>\n              )}\n            />\n          </BrowserRouter>\n        </Provider>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoaderPropTypes } from \"./types\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport \"./Loader.scss\";\n\nconst Loader: React.FC<LoaderPropTypes> = (props) => {\n  const { fontSize, text } = props;\n  return (\n    <div className=\"loader--generic\">\n      <Spin\n        indicator={\n          <LoadingOutlined style={{ fontSize: fontSize || 30 }} spin />\n        }\n        tip={text}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import { StateTypes, actionTypes } from \"./types\";\n\nconst initialState: StateTypes = {\n  userType: \"\",\n  isAuth: false,\n  profileDetails: {},\n  loading: false,\n  recentJobs: [],\n  skillSearch: [],\n  trendingJobs: [],\n  recommendedJobs: [],\n  activeJob: {},\n  jobDetailModalVisible: false,\n  recommendedCandidates: [],\n  recruiterCandidateDetails: {},\n  searchType: \"recommended\",\n  companySearch: [],\n  appliedCandidates: [],\n  skills: [],\n  cities: [],\n};\n\nconst rootReducer = (state: StateTypes = initialState, action: actionTypes) => {\n  switch (action.type) {\n    case \"SET_AUTH\":\n      return { ...state, isAuth: action.payload };\n    case \"SET_USER_TYPE\":\n      return { ...state, userType: action.payload };\n    case \"SET_PROFILE_DETAIL\":\n      return { ...state, profileDetails: action.payload };\n    case \"SET_MESSAGES\":\n      return { ...state, messages: action.payload };\n    case \"SET_LOADING\":\n      return { ...state, loading: action.payload };\n    case \"ADD_JOB_POST\":\n      return { ...state, recentJobs: [action.payload, ...state.recentJobs] };\n    case \"SET_POSTED_JOBS\":\n      return { ...state, recentJobs: action.payload };\n    case \"SET_SKILL_SEARCH_RESULT\":\n      return { ...state, skillSearch: action.payload };\n    case \"SET_TRENDING_JOBS\":\n      return { ...state, trendingJobs: action.payload };\n    case \"SET_RECOMMENDED_JOBS\":\n      return { ...state, recommendedJobs: action.payload };\n    case \"SET_ACTIVE_JOB\":\n      return { ...state, activeJob: action.payload };\n    case \"SET_ACTIVE_JOB_MODAL_VISIBLE\":\n      return { ...state, jobDetailModalVisible: action.payload };\n    case \"SET_RECOMMENDED_CANDIDATES\":\n      return { ...state, recommendedCandidates: action.payload };\n    case \"SET_RECRUITER_CANDIDATE_DETAILS\":\n      return { ...state, recruiterCandidateDetails: action.payload };\n    case \"SET_SEARCH_TYPE\":\n      return { ...state, searchType: action.payload };\n    case \"SET_COMPANY_SEARCH\":\n      return { ...state, companySearch: action.payload };\n    case \"SET_APPLIED_CANDIDATES\":\n      return { ...state, appliedCandidates: action.payload };\n    case \"SET_CITIES\":\n      return { ...state, cities: action.payload };\n    case \"SET_SKILLS\":\n      return { ...state, skills: action.payload };\n    case \"CLEAR_STATE\":\n      return { ...initialState };\n    default:\n      return { ...state };\n  }\n};\n\nexport default rootReducer;\n"],"sourceRoot":""}